---

- name: install package dependencies
  package: name={{ item }} state=present
  with_items: "{{ ail_pkg }}"

- name: create ail user
  user: name="{{ ail_user }}" home="{{ ail_home }}" comment="AIL app user" shell=/bin/bash

- name: ensure right permissions for ail homedir
  file: "dest={{ ail_home }} state=directory mode=0755 owner={{ ail_user }}"

- name: git clone AIL
  git: repo=https://github.com/CIRCL/AIL-framework.git
       dest="{{ ail_root }}"
  ignore_errors: true
  become: yes
  become_user: "{{ ail_user }}"

- name: install pip dependencies
  pip: "requirements={{ ail_root }}/pip_packages_requirement.txt virtualenv={{ ail_virtualenv }}"
- name: extra configuration for AILENV
  lineinfile: "dest={{ ail_virtualenv }}/bin/activate line={{ item }} backup=yes"
  with_items:
    - "export AIL_HOME={{ ail_root }}"
    - "export AIL_BIN={{ ail_root }}/bin"
    - "export AIL_FLASK={{ ail_root }}/var/www"
    - "export AIL_REDIS={{ ail_root }}/redis/src"
    - "export AIL_LEVELDB={{ ail_root }}/redis-leveldb"

- name: ensure appropriate directories exist
  file: "dest={{ item }} state=directory mode=0755 owner={{ ail_user }}"
  with_items:
    - "{{ ail_root }}/PASTES"
    - "{{ ail_root }}/Blooms"
    - "{{ ail_root }}/dumps"
    - "{{ ail_root }}/LEVEL_DB_DATA/2013"
    - "{{ ail_root }}/LEVEL_DB_DATA/2014"
    - "{{ ail_root }}/LEVEL_DB_DATA/2016"
    - "{{ ail_root }}/LEVEL_DB_DATA/3016"

- block:
    - name: review pystemon-feeder settings
      replace: "dest={{ ail_root }}/bin/feeder/pystemon-feeder.py regex={{ item.re }} replace={{ item.rep }} backup=yes"
      with_items:
        - { re: "^r = redis.StrictRedis(host='.*', db=.*)", rep: "r = redis.StrictRedis(host='{{ pystemon_redis_host }}', db={{ pystemon_redis_db }})" }
        - { re: '^pystemonpath = ".*"', rep: "pystemonpath = \"{{ pystemon_root }}\"" }
    - name: configure pystemon-feeder in supervisor
      template: "src=supervisor-pystemonfeeder.conf.j2 dest={{ supervisor_confdir }}/pystemonfeeder.{{ supervisor_ext }} mode=0644"
      notify:
        - supervisor update
  when: ail_enable_pystemonfeeder is defined and ail_enable_pystemonfeeder

- name: Download the necessary NLTK corpora
  command: "{{ ail_virtualenv }}/bin/python -m textblob.download_corpora creates={{ ail_virtualenv }}/lib/python2.7/site-packages/textblob/download_corpora.py"
  environment:
    HOME: "{{ ail_root }}"
  become: yes
  become_user: "{{ ail_user }}"

- name: Download sentiment vader
  command: "{{ ail_virtualenv }}/bin/python -m nltk.downloader vader_lexicon creates={{ ail_virtualenv }}/lib/python2.7/site-packages/textblob/en/en-lexicon.txt"
  become: yes
  become_user: "{{ ail_user }}"

## alternative: use a template if need to modify config
- name: check if existing config
  stat: "path={{ ail_root }}/bin/packages/config.cfg"
  register: ailcfg
- name: copy sample config
  copy: "src={{ ail_root }}/bin/packages/config.cfg.sample dest={{ ail_root }}/bin/packages/config.cfg mode=0644 owner={{ ail_user }} remote_src=true"
  when: not ailcfg.stat.exists

- include: ail-update_thirdparty.yml
- include: redis-tuning.yml

- name: set ail supervisor config
  template: "src=supervisor-{{ item }}.conf.j2 dest={{ supervisor_confdir }}/{{ item }}.{{ supervisor_ext }} mode=0644"
  with_items:
    - ail
    - ail-redis6379
    - ail-redis6380
    - ail-redis6381
    - ail-redis6382
    - ail-redis-leveldb2013
    - ail-redis-leveldb2014
    - ail-redis-leveldb2016
    - ail-redis-leveldb3016
    - ail-logqueue
    - ail-queues
## Note: repeatedly output state? not sure needed as daemon
## Note2: specific file as have arguments
#    - ail-script-ModuleInformation
  notify:
    - supervisor update

- name: set ail supervisor config for script
  template: "src=supervisor-ail-script-model.conf.j2 dest={{ supervisor_confdir }}/ail-script-{{ item }}.{{ supervisor_ext }} mode=0644"
  with_items:
    - Global
    - Attributes
    - Duplicates
    - Lines
    - DomClassifier
    - Categ
    - Tokenize
    - CreditCards
    - Onion
    - Mail
    - Web
    - Credential
    - Curve
    - CurveManageTopSets
    - Indexer
    - Keys
    - Phone
    - Release
    - Cve
    - WebStats
    - ModuleStats
    - SQLInjectionDetection
    - BrowseWarningPaste
    - SentimentAnalysis
  notify:
    - supervisor update

- name: ensure absolute path in redis 6382 config
  replace: dest={{ ail_root }}/configs/6382.conf regexp="^dir ../dumps/" replace="dir {{ ail_root }}/dumps/" backup=yes
- name: ensure absolute path in launch_queues.py
  replace: dest={{ ail_root }}/bin/launch_queues.py regexp="'\./Queue" replace="'{{ ail_root }}/bin/Queue" backup=yes
- name: check for all_modules.txt
  stat: path={{ ail_root }}/doc/all_modules.txt
  register: allmodules
- name: for ModuleInformation.py start - BUG?
  file: dest={{ ail_root }}/doc/all_modules.txt state=touch
  when: not allmodules.stat.exists

- name: disable redis upstream package service
  service: name=redis-server enabled=no state=stopped

- meta: flush_handlers

- name: ensure services are enabled and started
  service: name={{ item }} enabled=yes state=started
  with_items: "{{Â ail_services }}"

- name: ensure supervisor programs are started
  supervisorctl: name={{ item }} state=started
  with_items:
    - ail
    - ail-redis6379
    - ail-redis6381
    - ail-redis6382
    - ail-redis-leveldb2013
    - ail-redis-leveldb2014
    - ail-redis-leveldb2016
    - ail-redis-leveldb3016
    - ail-logqueue
    - ail-queues
    - ail-script-Global
    - ail-script-Attributes
    - ail-script-Duplicates
    - ail-script-Lines
## 201706 'ail-script-DomClassifier: ERROR (already started)'
#    - ail-script-DomClassifier
    - ail-script-Categ
    - ail-script-Tokenize
    - ail-script-CreditCards
    - ail-script-Onion
    - ail-script-Mail
    - ail-script-Web
    - ail-script-Credential
    - ail-script-Curve
    - ail-script-CurveManageTopSets
    - ail-script-Indexer
    - ail-script-Keys
    - ail-script-Phone
    - ail-script-Release
    - ail-script-Cve
    - ail-script-WebStats
    - ail-script-ModuleStats
    - ail-script-SQLInjectionDetection
    - ail-script-BrowseWarningPaste
    - ail-script-SentimentAnalysis

- name: Wait for Redis to be started
  wait_for: port={{ item }} delay=15
  with_items:
    - 6379
    - 6380
    - 6381
    - 6382
#  changed_when: false

